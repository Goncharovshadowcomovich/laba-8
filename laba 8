//Дан текст, каждый символ которого может быть малой буквой, цифрой или одним из знаков +, -, *.
//Группой букв будем называть такую совокупность последовательно расположенных букв, которой непосредственно не предшествует и за которой непосредственно не следует буква.
//Аналогично определим группу цифр и группу знаков. Выяснить, верно ли что, в данном тексте больше групп букв, чем групп знаков.
#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

int isAlpha(unsigned char);
int isSign(unsigned char);

int main() {
int sizeOfText = 0;
int groupsOfWords = 0;
int groupsOfNums = 0;
int groupsOfSigns = 0;
char *text;

printf("Enter size of text: ");
while (!scanf_s("%d", &sizeOfText)) {
printf("Enter size of text: ");
rewind(stdin);
}
if (sizeOfText == 0) exit(0);
rewind(stdin);
sizeOfText += 2;

text = (char*)calloc(sizeOfText, sizeof(char));
printf("Enter text: ");
fgets(text, sizeOfText, stdin);
if (!text) exit(228);

//for (int i = 0; i < sizeOfText;) {
int i = 0;
while (i < sizeOfText && text[i] != '\n') {
if (!isSign(text[i]) && !isdigit(text[i]) && !isAlpha(text[i])) i++;

if (isSign(text[i])) {
if (i >= 1) {
if (!isSign(text[i - 1])) {
groupsOfSigns++;
while (i < sizeOfText && isSign(text[i])) {
i++;
}
}
} else {
groupsOfSigns++;
while (i < sizeOfText && isSign(text[i])) {
i++;
}
}
}

if (isdigit(text[i])) {
if (i >= 1) {
if (!isdigit(text[i - 1])) {
groupsOfNums++;
while (i < sizeOfText && isdigit(text[i])) {
i++;
}
}
} else {
groupsOfNums++;
while (i < sizeOfText && isdigit(text[i])) {
i++;
}
}
}

if (isAlpha(text[i])) {
if (i >= 1) {
if (!isAlpha(text[i - 1])) {
groupsOfWords++;
while (i < sizeOfText && isAlpha(text[i])) {
i++;
}
}
} else {
groupsOfWords++;
while (i < sizeOfText && isAlpha(text[i])) {
i++;
}
}
}

}
printf("groupsOfNums: %d groupsOfWords: %d groupsOfSigns: %d", groupsOfNums, groupsOfWords, groupsOfSigns);
if (groupsOfWords > groupsOfSigns) {
printf("\ngroupsOfWords(%d) > (%d)groupsOfSigns", groupsOfWords, groupsOfSigns);
} else if (groupsOfWords < groupsOfSigns) {
printf("\ngroupsOfWords(%d) < (%d)groupsOfSigns", groupsOfWords, groupsOfSigns);
} else {
printf("\ngroupsOfWords(%d) = (%d)groupsOfSigns", groupsOfWords, groupsOfSigns);
}
return 0;
}

int isAlpha(unsigned char sym) { //Функция для проверки на русские и английские буквы
if (((int)sym >= 65 && (int)sym <= 90) || ((int)sym >= 97 && (int)sym <= 122)) return 1;
if (((int)sym >= 192 && (int)sym <= 255)) return 1;
return 0;
}

int isSign(unsigned char sym) {
if (sym == '+' || sym == '-' || sym == '*') return 1;
return 0;
}
